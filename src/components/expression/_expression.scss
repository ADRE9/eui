/**
 * 1. Keep each expression's text together as much as possible,
 *    but then wrap long words
 */
.euiExpression {
  @include euiTextBreakWord; /* 1 */
  @include euiFontSizeS;
  @include euiCodeFont;

  border-block-end: $euiBorderWidthThick solid transparent;
  display: inline-block; /* 1 */
  text-align: left;
  padding-block: ($euiSizeXS / 2);
  padding-inline: 0;
  transition: all $euiAnimSpeedNormal ease-in-out;
  color: $euiTextColor;

  &:focus {
    border-block-end-style: solid;
  }

  & + .euiExpression {
    margin-inline-start: $euiSizeS;
  }

  &.euiExpression--columns {
    border-color: transparent;
    // Ensures there's no flash of the dashed style before turning solid for the active state
    border-block-end-style: solid;
    margin-block-end: $euiSizeXS;
  }

  &.euiExpression--truncate {
    max-width: 100%;

    .euiExpression__description,
    .euiExpression__value {
      @include euiTextTruncate;
      display: inline-block;
      vertical-align: bottom;
    }

  }
}

.euiExpression-isUppercase .euiExpression__description {
  text-transform: uppercase;
}

.euiExpression-isClickable {
  cursor: pointer;
  border-block-end: $euiBorderEditable;

  &:hover:not(:disabled) {
    border-block-end-style: solid;
    transform: translateY(-1px);
  }
}

.euiExpression__icon {
  margin-inline-start: $euiSizeXS;
}

.euiExpression-isActive {
  border-block-end-style: solid;
}

.euiExpression--columns {
  width: 100%;
  display: flex;
  padding: $euiSizeXS;
  border-radius: $euiSizeXS;

  &.euiExpression-isClickable {
    background-color: $euiColorLightestShade;

    // sass-lint:disable-block nesting-depth
    &:focus,
    &:hover:not(:disabled) {
      .euiExpression__description,
      .euiExpression__value {
        // inner child specificity so it inherits underline color from text color
        text-decoration: underline;
      }
    }
  }

  .euiExpression__description {
    text-align: right;
    margin-inline-end: $euiSizeS;
    flex-shrink: 0; // Ensures it doesn't get smaller in case the value is really long
  }

  .euiExpression__value {
    flex-grow: 1;
  }

  .euiExpression__icon {
    margin-block-start: $euiSizeXS;
  }
}

@each $name, $color in $euiExpressionColors {
  .euiExpression--#{$name} {
    &:focus {
      background-color: transparentize($color, .9);
    }

    &.euiExpression-isActive {
      border-block-end-color: $color;
      border-color: $color;
    }

    .euiExpression__description {
      color: $color;
    }
  }
}
